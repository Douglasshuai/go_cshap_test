// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Accounts.proto

package Accounts

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmployeeNameRequest struct {
	EmpId                string   `protobuf:"bytes,1,opt,name=emp_id,json=empId,proto3" json:"emp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmployeeNameRequest) Reset()         { *m = EmployeeNameRequest{} }
func (m *EmployeeNameRequest) String() string { return proto.CompactTextString(m) }
func (*EmployeeNameRequest) ProtoMessage()    {}
func (*EmployeeNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97181c47ece58793, []int{0}
}

func (m *EmployeeNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeNameRequest.Unmarshal(m, b)
}
func (m *EmployeeNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeNameRequest.Marshal(b, m, deterministic)
}
func (m *EmployeeNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeNameRequest.Merge(m, src)
}
func (m *EmployeeNameRequest) XXX_Size() int {
	return xxx_messageInfo_EmployeeNameRequest.Size(m)
}
func (m *EmployeeNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeNameRequest proto.InternalMessageInfo

func (m *EmployeeNameRequest) GetEmpId() string {
	if m != nil {
		return m.EmpId
	}
	return ""
}

type EmployeeName struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmployeeName) Reset()         { *m = EmployeeName{} }
func (m *EmployeeName) String() string { return proto.CompactTextString(m) }
func (*EmployeeName) ProtoMessage()    {}
func (*EmployeeName) Descriptor() ([]byte, []int) {
	return fileDescriptor_97181c47ece58793, []int{1}
}

func (m *EmployeeName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmployeeName.Unmarshal(m, b)
}
func (m *EmployeeName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmployeeName.Marshal(b, m, deterministic)
}
func (m *EmployeeName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmployeeName.Merge(m, src)
}
func (m *EmployeeName) XXX_Size() int {
	return xxx_messageInfo_EmployeeName.Size(m)
}
func (m *EmployeeName) XXX_DiscardUnknown() {
	xxx_messageInfo_EmployeeName.DiscardUnknown(m)
}

var xxx_messageInfo_EmployeeName proto.InternalMessageInfo

func (m *EmployeeName) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *EmployeeName) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func init() {
	proto.RegisterType((*EmployeeNameRequest)(nil), "EmployeeNameRequest")
	proto.RegisterType((*EmployeeName)(nil), "EmployeeName")
}

func init() { proto.RegisterFile("Accounts.proto", fileDescriptor_97181c47ece58793) }

var fileDescriptor_97181c47ece58793 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x73, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe1, 0x12, 0x76, 0xcd,
	0x2d, 0xc8, 0xc9, 0xaf, 0x4c, 0x4d, 0xf5, 0x4b, 0xcc, 0x4d, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x12, 0xe5, 0x62, 0x4b, 0xcd, 0x2d, 0x88, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x62, 0x4d, 0xcd, 0x2d, 0xf0, 0x4c, 0x51, 0xf2, 0xe2, 0xe2, 0x41, 0x56, 0x2d, 0x24,
	0xcb, 0xc5, 0x95, 0x96, 0x59, 0x54, 0x5c, 0x12, 0x9f, 0x97, 0x98, 0x9b, 0x0a, 0x55, 0xca, 0x09,
	0x16, 0x01, 0x4b, 0x4b, 0x73, 0x71, 0xe6, 0x24, 0xc2, 0x64, 0x99, 0xc0, 0xb2, 0x1c, 0x20, 0x01,
	0x90, 0xa4, 0x91, 0x17, 0xdc, 0x2d, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x16, 0x5c,
	0xfc, 0xee, 0xa9, 0x25, 0x28, 0x16, 0x88, 0xe8, 0x61, 0x71, 0x9d, 0x14, 0x2f, 0x8a, 0xa8, 0x12,
	0x43, 0x12, 0x1b, 0xd8, 0x33, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xbd, 0x50, 0x80,
	0xde, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	GetEmployeeName(ctx context.Context, in *EmployeeNameRequest, opts ...grpc.CallOption) (*EmployeeName, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetEmployeeName(ctx context.Context, in *EmployeeNameRequest, opts ...grpc.CallOption) (*EmployeeName, error) {
	out := new(EmployeeName)
	err := c.cc.Invoke(ctx, "/AccountService/GetEmployeeName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	GetEmployeeName(context.Context, *EmployeeNameRequest) (*EmployeeName, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) GetEmployeeName(ctx context.Context, req *EmployeeNameRequest) (*EmployeeName, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmployeeName not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetEmployeeName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmployeeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetEmployeeName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AccountService/GetEmployeeName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetEmployeeName(ctx, req.(*EmployeeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEmployeeName",
			Handler:    _AccountService_GetEmployeeName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Accounts.proto",
}
